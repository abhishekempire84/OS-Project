#include<stdio.h>
 
int main()
{
      int i, n, total = 0, x, counter = 0, time_quantum,j;
     
      int wt = 0, tt = 0,pos,m,p[10],priorty[10], at[10], bt[10], temp[10],b;
     
      float avg_w_time, avg_t_time;
     
      printf("\nEnter Total Number of Processes:");
     
      scanf("%d", &n);
     
      x = n;
      for(i = 0; i < n; i++)
      {
        p[i]=i+1;
       
        priorty[i]=0;
            printf("\nEnter total Details of Process[%d]\n", i + 1);
            printf("Arrival Time:\t");
            scanf("%d", &at[i]);
            printf("Burst Time:\t");
            scanf("%d", &bt[i]);
            temp[i] = bt[i];
      }
       
      printf("\nEnter the Time Quantum:");
      scanf("%d", &time_quantum);
      printf("\nProcess ID\t\tBurst Time\t Turnaround Time\t Waiting Time\t\n");
      for(total = 0, i = 0; x != 0;)
      {
 
            for(m=0;m<n;m++)
            {
            int temp1;
            pos=m;
            for(j=m+1;j<n;j++)
            {
                if(priorty[j]<priorty[pos])
                pos=j;
            }
         
        temp1=priorty[m];
   
        priorty[m]=priorty[pos];
   
        priorty[pos]=temp1;
         
            temp1=bt[m];
            bt[m]=bt[pos];
            bt[pos]=temp1;
                    temp1=at[m];
                at[m]=at[pos];
            at[pos]=temp1;
 
            temp1=p[m];
                p[m]=p[pos];
            p[pos]=temp1;
 
            temp1=temp[m];
                temp[m]=temp[pos];
            temp[pos]=temp1;
            }
        {
        }
           
            if(temp[i] <= time_quantum && temp[i] > 0)
            {
                  total = total + temp[i];
                  temp[i] = 0;
                  counter = 1;
            }
           
            else if(temp[i] > 0)
            {
                  temp[i] = temp[i] - time_quantum;
                  total = total + time_quantum;
            }
 
    for(b=0;b<n;b++)
        {
            if(b==i)
            priorty[b]+=1;
            else
            priorty[b]+=2;
        }
 
            if(temp[i] == 0 && counter == 1)
            {
                  x--;
                  printf("\nProcess[%d]\t\t\t%d\t\t%d\t\t %d\t\t", p[i], bt[i], total - at[i], total -at[i] - bt[i]);
                  wt = wt + total - at[i] - bt[i];
                  tt = tt + total - at[i];
                  counter = 0;
            }
            if(i == n - 1)
            {
                  i = 0;
           
            }
            else if(at[i + 1] <= total)
            {
                  i++;
           
            }
            else
            {
                  i = 0;
           
            }      
      }
      avg_w_time = wt / n; 
      avg_t_time = tt / n;
      printf("\n\nAverage Waiting Time:\t%lf\n", avg_w_time);
      printf("Average Turnaround Time:\t%lf\n", avg_t_time);
      return 0;
}
